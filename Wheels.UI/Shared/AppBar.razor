<MudAppBar Elevation="3">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" 
                   OnClick="async () => await OnSidebarToggled.InvokeAsync()" />
    <MudSpacer />
    @if (_isLightMode)
    {
        <MudIconButton Icon="@Icons.Material.Filled.Brightness4" Color="Color.Inherit" OnClick="ToggleTheme" />
    }
    else
    {
        <MudIconButton Icon="@Icons.Material.Filled.Brightness5" Color="Color.Inherit" OnClick="ToggleTheme" />
    }
</MudAppBar>

@code
{
    private bool _isLightMode = true;
    private MudTheme _currentTheme = new MudTheme();
    [Parameter]
    public EventCallback OnSidebarToggled { get; set; }
    [Parameter]
    public EventCallback<MudTheme> OnThemeToggled { get; set; }
    private async Task ToggleTheme()
    {
        _isLightMode = !_isLightMode;
        _currentTheme = !_isLightMode ? GenerateDarkTheme() : new MudTheme();
        await OnThemeToggled.InvokeAsync(_currentTheme);
    }
    private MudTheme GenerateDarkTheme() =>
        new()
        {
            Palette = new Palette()
            {
                Dark = "#dddddd",
                Black = "#27272f",
                Background = "#27272f",
                BackgroundGrey = "#27272f",
                Surface = "#27272f",
                TextPrimary = "#ffffffb3",
                TextSecondary = "rgba(255,255,255, 0.50)",
                AppbarBackground = "#27272f",
                AppbarText = "#ffffffb3",
                DrawerBackground = "#27272f",
                DrawerText = "#ffffffb3",
                DrawerIcon = "#ffffffb3"
            }
        };
}
