@page "/"
@using Wheels.Domain.Models
@using Wheels.Application.Services 
@using Wheels.UI.Components

@inject PostService PostService
@inject NavigationManager NavManager
<style>
    
</style>

<div class="row"> 
    <div class="col-md-8" style="margin: 0 auto">
        <MudPaper Elevation="0" Style="padding: 15px">
            <MudButtonGroup Style="justify-content: center;display: flex;" Color="Color.Primary" Variant="Variant.Text">
                <MudButton>Свежие</MudButton>
                <MudButton>Старые </MudButton>
            </MudButtonGroup>
        </MudPaper>
        @if (_posts.Count > 0)
        {
            foreach (var post in _posts)
            {
                <PostPreview Post="post"/>
            }
        }

    </div>
    <div class="col-md-4" style="margin: 100px auto; justify-content: center; width: auto">
            <MudText Typo="Typo.h6">Лучшие посты</MudText>
            <MudCarousel Class="mud-width-full" 
                         ItemsSource="@_topRatedPosts" 
                         Style="height:200px; max-width: 450px; min-width: 300px;position: sticky;  "
                         ShowArrows="true" 
                         ShowBullets="false" 
                         EnableSwipeGesture="true" 
                         AutoCycle="true">
            	<ItemTemplate>
                    <div class="d-flex flex-column flex-column justify-center" 
                         style="background-image: url(@context.ImageFile[0]); background-size: contain; background-repeat: no-repeat;height:100%"> 
                        <span class="stroked-text" @onclick="() => ViewPost(context.Id)">
                            @context.Title
                        </span>
            		</div>
            	</ItemTemplate>
            </MudCarousel>
        
    </div>
   @if (_postsCount > 10)
   {
       <div style="text-align: center">
           <MudPagination
               Size="Size.Small"
               SelectedChanged="GetPosts"
               ShowFirstButton="true"
               ShowLastButton="true"
               Variant="Variant.Filled"
               Count="@(_postsCount / 10)"/>
       </div>
   }
</div>

@code{
    List<Post> _posts = new();
    List<Post> _topRatedPosts = new();
    int _postsCount; 
    protected override async Task OnInitializedAsync()
    {
        _postsCount = PostService.GetPostsCount();
        _posts = await PostService.GetPostsAsync(0);
        _topRatedPosts = await PostService.GetPostsByRatingAsync();
    }

    async Task GetPosts(int pageNo)
    { 
        _posts = await PostService.GetPostsAsync(pageNo - 1);
        NavManager.NavigateTo("/");
    }
    private void ViewPost(string postId)
    {
        NavManager.NavigateTo("/view/" + postId);
    }
    

}
