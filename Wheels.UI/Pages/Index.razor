@page "/"
@using Wheels.Domain.Models
@using Wheels.Application.Services 

@inject PostService PostService
@inject NavigationManager NavManager
<div class="row"> 
    <div class="col-md-8" style="margin: 0 auto">
        @if (_posts.Count > 0)
        {
            foreach (var post in _posts)
            {
                <MudCard Class="hoverable-card" Elevation="3" Style="border-radius: 10px">

                    <MudCardMedia Image="@post.ImageFile[0]" Style="height: 400px"/>
                    <a href="/" @onclick="() => ViewPost(post.Id)"><h3 style="text-align: center; margin: 15px auto; font-weight: bold"> @post.Title </h3></a>
                    <h4 style="text-align: right; color: darkgray; font-size: x-small">@post.Posted.ToString("D")</h4>
                    @foreach (var line in post.Text.Take(3))
                    {
                        <MudText Style="margin-bottom: 10px" Typo="Typo.body2">
                            @line
                        </MudText>
                    }

                    <MudCardActions>
                        @if (post.Text.Length > 3)
                        {
                            <MudButton Variant="Variant.Text" OnClick="() => ViewPost(post.Id)" Color="Color.Tertiary">Далее . . .</MudButton>
                        }
                    </MudCardActions>
                </MudCard>
            }
        }
        
    </div>
    <div style="text-align: center">
        <MudPagination
            Size="Size.Small"
            SelectedChanged="GetPosts"
            ShowFirstButton="true"
            ShowLastButton="true"
            Variant="Variant.Filled"
            Count="@(_postsCount / 10)"/>
    </div>
</div>

@code{
    List<Post> _posts = new();
    int _postsCount; 
    protected override async Task OnInitializedAsync()
    {
        _postsCount = PostService.GetPostsCount();
        _posts = await PostService.GetPostsAsync(0);
    }

    async Task GetPosts(int pageNo)
    { 
        _posts = await PostService.GetPostsAsync(pageNo - 1);
        NavManager.NavigateTo("/");
    }

    private void ViewPost(string postId)
    {
        NavManager.NavigateTo("/view/" + postId);
    }

}
